<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
	<head>
		<title>Player API Exercise 5</title>
		<style type="text/css">
			body {font-family : Helvetica,Arial,sans-serif; color : #835004}
			legend {
				color: #CF0050;
			}
		</style>
	</head>
	<body>
		<h1>Player API Training</h1>
		<!-- Start of Brightcove Player -->

		<div style="display:none">

		</div>

		<!--
		By use of this code snippet, I agree to the Brightcove Publisher T and C
		found at https://accounts.brightcove.com/en/terms-and-conditions/.
		-->

		<script language="JavaScript" type="text/javascript" src="http://admin.brightcove.com/js/BrightcoveExperiences.js"></script>
		<!-- including Player API -->
		<script type="text/javascript" src="http://admin.brightcove.com/js/APIModules_all.js"></script>
		<object id="myExperience" class="BrightcoveExperience">
		  <param name="bgcolor" value="#FFFFFF" />
		  <param name="width" value="960" />
		  <param name="height" value="525" />
		  <param name="playerID" value="921845534001" />
		  <param name="playerKey" value="AQ~~,AAAA1oy1bvE~,ALl2ezBj3WGoBumfwLrDJjWFEqE-rUG3" />
		  <param name="isVid" value="true" />
		  <param name="isUI" value="true" />
		  <param name="dynamicStreaming" value="true" />

			<param name="templateReadyHandler" value="BCL.onTemplateReady" />
</object>
		<!--
		This script tag will cause the Brightcove Players defined above it to be created as soon
		as the line is read by the browser. If you wish to have the player instantiated only after
		the rest of the HTML is processed and the page load is complete, remove the line.
		-->
		<script type="text/javascript">brightcove.createExperiences();</script>

		<!-- End of Brightcove Player -->
		<div id="search">
		<p>Enter keywords to search for videos, using commas to separate multiple terms -- hint: try "water", "fish," "bird," or "animal."</p>
		<p>
			<input type="text" id="searchTerm" size="30"/>
			<br/>
			<input type="button" value="Submit"  onclick="BCL.searchForVideos()" />
		</p>
		</div>
		<fieldset>
			<legend>Generated Code</legend>
			<div id="videoSelector"></div>
			<h3 id="displayName"></h3>
		</fieldset>

		<fieldset>
      <legend>Results</legend>
			<div id="results"></div>
    </fieldset>
		<script type="text/javascript">
			// namespace for everything global
			var BCL = {};
		// listener for the Template Ready event
			BCL.onTemplateReady = function(event) {
				console.log("EVENT: TEMPLATE_READY");
			  BCL.player = brightcove.getExperience("myExperience");
			  BCL.experienceModule = BCL.player.getModule(APIModules.EXPERIENCE);
			  BCL.videoPlayer = BCL.player.getModule(APIModules.VIDEO_PLAYER);
			  BCL.videoPlayer.addEventListener(BCMediaEvent.CHANGE, BCL.onMediaChange);
				// get reference to the menu module
			  BCL.menuModule = BCL.player.getModule(APIModules.MENU);
			  // get reference search module and set up listeners
			  BCL.searchModule = BCL.player.getModule(APIModules.SEARCH);
		    BCL.searchModule.addEventListener(BCSearchEvent.RESULT, BCL.onSearchResult);
		    BCL.searchModule.addEventListener(BCSearchEvent.ERROR, BCL.onSearchError);
			}

			// change the displayName with a new video
			BCL.onMediaChange = function(event) {
			  console.log("EVENT: Media Change");
			  var displayName = BCL.videoPlayer.getCurrentVideo().displayName;
			  document.getElementById("displayName").innerHTML = displayName;
			  console.log("displayName is " + displayName);
			}
				// replace the old media collection load handler to search result handler
				BCL.onSearchResult = function(event) {
				  console.log("EVENT: search result");
				  console.log(event);
				  var html = "<select id='playlist' onChange='BCL.onVideoSelect()'>";
					var video;
				  for (var i in event.items) {
				    video = event.items[i];
				    html += "<option value='" + video.id + "'>" + video.displayName + "</option>";
				  }
				  document.getElementById("videoSelector").innerHTML = html;
				  BCL.playVideo(event.items[0].id);
				}

				// play a different video
				BCL.onVideoSelect = function() {
				  var playlist = document.getElementById("playlist");
				  console.log("BCL.onVideoSelect: " + playlist.value);
					BCL.playVideo(playlist.value);
				}
				// play a video
				BCL.playVideo = function(videoID) {
					if (BCL.menuModule.isMenuPageShowing()) {
					BCL.menuModule.closeMenuPage();
					}
					BCL.videoPlayer.loadVideo(videoID);
				}
				// search for videos
				BCL.searchForVideos = function() {
					var searchTerm = document.getElementById("searchTerm").value;
					console.log("search term: "+searchTerm);
					if (searchTerm != "") {
						var tagArray;
						tagArray = searchTerm.split(",");
						BCL.searchModule.findVideosByTags(null,tagArray);
					}
					else {
						BCL.searchModule.findAllVideos();
					}
				}
				// search error listener
				BCL.onSearchError = function(event) {
				console.log("oops, I couldn't find any videos that matched; I'll try to get them all instead");
					BCL.searchModule.findAllVideos();
				}
		</script>

	</body>
</html>
